#This dataset has been cleaned beforehand
val<-read.table("data.txt",sep="\t", header=TRUE,quote="",comment.char = "")
val1<-val[,c("Anon.Student.Id","KC..Unique.step.","Duration..sec.","Outcome")]
val1$Outcome <- as.character(val1$Outcome)
val1$Outcome[val1$Outcome=="CORRECT"] <-"1"
val1$Outcome[val1$Outcome=="INCORRECT"] <- "0"
val1$Outcome[val1$Outcome=="STUDY"] <- "0"
dt<-read.csv('dataset1.csv')
#selected the 4 feature needed for aggregation
#dt1<-dt[,c(1,4,2,3)]
dt1<-val1[,c(1,2,3,4)]
#aggregation
dt1<-aggregate(dt1,by=list(dt1$Anon.Student.Id,dt1$KC..Unique.step.),FUN=mean)
#dt1<-aggregate(dt1,by=list(dt1$StudentId,dt1$KC..Theoretical.Levels.),FUN=mean)
dt1<-dt1[,c(1,2,5,6)]
colnames(dt1)<-c('StudentId','TheoLevel','Duration','Correct')
aggdata<-dt1[with(dt1,order(StudentId,TheoLevel)),]
#change data form and replace missing data with column means
student_theolevel<-reshape(aggdata, idvar = "StudentId", timevar = "TheoLevel", direction = "wide")
for(i in 1:ncol(student_theolevel)){
student_theolevel[is.na(student_theolevel[,i]), i] <- mean(student_theolevel[,i], na.rm = TRUE)}
#clustering
mydata<-student_theolevel[,c(2:9)]
mydata<-scale(mydata)
d <- dist(mydata, method = "euclidean") # distance matrix
fit <- hclust(d, method="ward.D2")
plot(fit) # display dendogram
rect.hclust(fit, k=4, border='red')
group4 <- cutree(fit, k=4)
student_theolevel<-cbind(student_theolevel,group4)
# Creates output log file
print (length(args))
print ("Suhiab")
print ("Suhiab")
#This dataset has been cleaned beforehand
val<-read.table("data.txt",sep="\t", header=TRUE,quote="",comment.char = "")
print ("Suhiab")
val1<-val[,c("Anon.Student.Id","KC..Unique.step.","Duration..sec.","Outcome")]
val1$Outcome <- as.character(val1$Outcome)
val1$Outcome[val1$Outcome=="CORRECT"] <-"1"
val1$Outcome[val1$Outcome=="INCORRECT"] <- "0"
val1$Outcome[val1$Outcome=="STUDY"] <- "0"
#dt<-read.csv('dataset1.csv')
#selected the 4 feature needed for aggregation
#dt1<-dt[,c(1,4,2,3)]
dt1<-val1[,c(1,2,3,4)]
#aggregation
dt1<-aggregate(dt1,by=list(dt1$Anon.Student.Id,dt1$KC..Unique.step.),FUN=mean)
#dt1<-aggregate(dt1,by=list(dt1$StudentId,dt1$KC..Theoretical.Levels.),FUN=mean)
dt1<-dt1[,c(1,2,5,6)]
colnames(dt1)<-c('StudentId','TheoLevel','Duration','Correct')
aggdata<-dt1[with(dt1,order(StudentId,TheoLevel)),]
#change data form and replace missing data with column means
student_theolevel<-reshape(aggdata, idvar = "StudentId", timevar = "TheoLevel", direction = "wide")
for(i in 1:ncol(student_theolevel)){
student_theolevel[is.na(student_theolevel[,i]), i] <- mean(student_theolevel[,i], na.rm = TRUE)}
#clustering
mydata<-student_theolevel[,c(2:9)]
mydata<-scale(mydata)
d <- dist(mydata, method = "euclidean") # distance matrix
fit <- hclust(d, method="ward.D2")
plot(fit) # display dendogram
rect.hclust(fit, k=4, border='red')
group4 <- cutree(fit, k=4)
student_theolevel<-cbind(student_theolevel,group4)
print ("Suhiab")
# Creates output log file
print (length(args))
print ("Suhiab")
print ("Suhiab")
#This dataset has been cleaned beforehand
val<-read.table("data.txt",sep="\t", header=TRUE,quote="",comment.char = "")
print ("Suhiab")
val1<-val[,c("Anon.Student.Id","KC..Unique.step.","Duration..sec.","Outcome")]
val1$Outcome <- as.character(val1$Outcome)
val1$Outcome[val1$Outcome=="CORRECT"] <-"1"
val1$Outcome[val1$Outcome=="INCORRECT"] <- "0"
val1$Outcome[val1$Outcome=="STUDY"] <- "0"
#dt<-read.csv('dataset1.csv')
#selected the 4 feature needed for aggregation
#dt1<-dt[,c(1,4,2,3)]
dt1<-val1[,c(1,2,3,4)]
#aggregation
dt1<-aggregate(dt1,by=list(dt1$Anon.Student.Id,dt1$KC..Unique.step.),FUN=mean)
#dt1<-aggregate(dt1,by=list(dt1$StudentId,dt1$KC..Theoretical.Levels.),FUN=mean)
dt1<-dt1[,c(1,2,5,6)]
colnames(dt1)<-c('StudentId','TheoLevel','Duration','Correct')
aggdata<-dt1[with(dt1,order(StudentId,TheoLevel)),]
#change data form and replace missing data with column means
student_theolevel<-reshape(aggdata, idvar = "StudentId", timevar = "TheoLevel", direction = "wide")
for(i in 1:ncol(student_theolevel)){
student_theolevel[is.na(student_theolevel[,i]), i] <- mean(student_theolevel[,i], na.rm = TRUE)}
#clustering
mydata<-student_theolevel[,c(2:9)]
mydata<-scale(mydata)
d <- dist(mydata, method = "euclidean") # distance matrix
fit <- hclust(d, method="ward.D2")
plot(fit) # display dendogram
rect.hclust(fit, k=4, border='red')
group4 <- cutree(fit, k=4)
student_theolevel<-cbind(student_theolevel,group4)
print ("Suhiab")
# Creates output log file
print (length(args))
print ("Suhiab")
print ("Suhiab")
datafile<-"data.txt" # CHANGE THIS VALUE TO THE DataShop export file IN YOUR R WORKING DIRECTORY
setwd("C:\\Users\\AlRousan\\Documents\\NetBeansProjects\\WorkflowComponents\\AnalysisEMD\\program")
#This dataset has been cleaned beforehand
#val<-read.table("data.txt",sep="\t", header=TRUE,quote="",comment.char = "")
val<-read.table(datafile,sep="\t", header=TRUE,quote="",comment.char = "")
print ("Suhiab")
val1<-val[,c("Anon.Student.Id","KC..Unique.step.","Duration..sec.","Outcome")]
val1$Outcome <- as.character(val1$Outcome)
val1$Outcome[val1$Outcome=="CORRECT"] <-"1"
val1$Outcome[val1$Outcome=="INCORRECT"] <- "0"
val1$Outcome[val1$Outcome=="STUDY"] <- "0"
#dt<-read.csv('dataset1.csv')
#selected the 4 feature needed for aggregation
#dt1<-dt[,c(1,4,2,3)]
dt1<-val1[,c(1,2,3,4)]
#aggregation
dt1<-aggregate(dt1,by=list(dt1$Anon.Student.Id,dt1$KC..Unique.step.),FUN=mean)
#dt1<-aggregate(dt1,by=list(dt1$StudentId,dt1$KC..Theoretical.Levels.),FUN=mean)
dt1<-dt1[,c(1,2,5,6)]
colnames(dt1)<-c('StudentId','TheoLevel','Duration','Correct')
aggdata<-dt1[with(dt1,order(StudentId,TheoLevel)),]
#change data form and replace missing data with column means
student_theolevel<-reshape(aggdata, idvar = "StudentId", timevar = "TheoLevel", direction = "wide")
for(i in 1:ncol(student_theolevel)){
student_theolevel[is.na(student_theolevel[,i]), i] <- mean(student_theolevel[,i], na.rm = TRUE)}
#clustering
mydata<-student_theolevel[,c(2:9)]
mydata<-scale(mydata)
d <- dist(mydata, method = "euclidean") # distance matrix
fit <- hclust(d, method="ward.D2")
plot(fit) # display dendogram
rect.hclust(fit, k=4, border='red')
group4 <- cutree(fit, k=4)
student_theolevel<-cbind(student_theolevel,group4)
print ("Suhiab")
# Creates output log file
print (length(args))
print ("Suhiab")
print ("Suhiab")
datafile<-"data.txt" # CHANGE THIS VALUE TO THE DataShop export file IN YOUR R WORKING DIRECTORY
setwd("C:\\Users\\AlRousan\\Documents\\NetBeansProjects\\WorkflowComponents\\AnalysisEMD\\program")
#This dataset has been cleaned beforehand
#val<-read.table("data.txt",sep="\t", header=TRUE,quote="",comment.char = "")
val<-read.table(datafile,sep="\t", header=TRUE,quote="",comment.char = "")
print ("Suhiab")
val1<-val[,c("Anon.Student.Id","KC..Unique.step.","Duration..sec.","Outcome")]
val1$Outcome <- as.character(val1$Outcome)
val1$Outcome[val1$Outcome=="CORRECT"] <-"1"
val1$Outcome[val1$Outcome=="INCORRECT"] <- "0"
val1$Outcome[val1$Outcome=="STUDY"] <- "0"
#dt<-read.csv('dataset1.csv')
#selected the 4 feature needed for aggregation
#dt1<-dt[,c(1,4,2,3)]
dt1<-val1[,c(1,2,3,4)]
#aggregation
dt1<-aggregate(dt1,by=list(dt1$Anon.Student.Id,dt1$KC..Unique.step.),FUN=mean)
#dt1<-aggregate(dt1,by=list(dt1$StudentId,dt1$KC..Theoretical.Levels.),FUN=mean)
dt1<-dt1[,c(1,2,5,6)]
colnames(dt1)<-c('StudentId','TheoLevel','Duration','Correct')
aggdata<-dt1[with(dt1,order(StudentId,TheoLevel)),]
#change data form and replace missing data with column means
student_theolevel<-reshape(aggdata, idvar = "StudentId", timevar = "TheoLevel", direction = "wide")
for(i in 1:ncol(student_theolevel)){
student_theolevel[is.na(student_theolevel[,i]), i] <- mean(student_theolevel[,i], na.rm = TRUE)}
#clustering
mydata<-student_theolevel[,c(2:9)]
mydata<-scale(mydata)
d <- dist(mydata, method = "euclidean") # distance matrix
fit <- hclust(d, method="ward.D2")
plot(fit) # display dendogram
rect.hclust(fit, k=4, border='red')
group4 <- cutree(fit, k=4)
student_theolevel<-cbind(student_theolevel,group4)
print ("final")
#This dataset has been cleaned beforehand
dt<-read.csv('dataset.csv')
#selected the 4 feature needed for aggregation
dt1<-dt[,c(1,15,9,12)]
#aggregation
dt1<-aggregate(dt1,by=list(dt1$StudentId,dt1$KC..Theoretical.Levels.),FUN=mean)
dt1<-dt1[,c(1,2,5,6)]
colnames(dt1)<-c('StudentId','TheoLevel','Duration','Correct')
aggdata<-dt1[with(dt1,order(StudentId,TheoLevel)),]
#change data form and replace missing data with column means
student_theolevel<-reshape(aggdata, idvar = "StudentId", timevar = "TheoLevel", direction = "wide")
for(i in 1:ncol(student_theolevel)){
student_theolevel[is.na(student_theolevel[,i]), i] <- mean(student_theolevel[,i], na.rm = TRUE)}
#clustering
mydata<-student_theolevel[,c(2:9)]
mydata<-scale(mydata)
d <- dist(mydata, method = "euclidean") # distance matrix
fit <- hclust(d, method="ward.D2")
plot(fit) # display dendogram
rect.hclust(fit, k=4, border='red')
group4 <- cutree(fit, k=4)
student_theolevel<-cbind(student_theolevel,group4)
#This dataset has been cleaned beforehand
dt<-read.csv('dataset1.csv')
#selected the 4 feature needed for aggregation
dt1<-dt[,c(1,15,9,12)]
#aggregation
dt1<-aggregate(dt1,by=list(dt1$StudentId,dt1$KC..Theoretical.Levels.),FUN=mean)
dt1<-dt1[,c(1,2,5,6)]
colnames(dt1)<-c('StudentId','TheoLevel','Duration','Correct')
aggdata<-dt1[with(dt1,order(StudentId,TheoLevel)),]
#change data form and replace missing data with column means
student_theolevel<-reshape(aggdata, idvar = "StudentId", timevar = "TheoLevel", direction = "wide")
for(i in 1:ncol(student_theolevel)){
student_theolevel[is.na(student_theolevel[,i]), i] <- mean(student_theolevel[,i], na.rm = TRUE)}
#clustering
mydata<-student_theolevel[,c(2:9)]
mydata<-scale(mydata)
d <- dist(mydata, method = "euclidean") # distance matrix
fit <- hclust(d, method="ward.D2")
plot(fit) # display dendogram
rect.hclust(fit, k=4, border='red')
group4 <- cutree(fit, k=4)
student_theolevel<-cbind(student_theolevel,group4)
#This dataset has been cleaned beforehand
dt<-read.csv('dataset.csv')
#selected the 4 feature needed for aggregation
dt1<-dt[,c(1,15,9,12)]
#aggregation
dt1<-aggregate(dt1,by=list(dt1$StudentId,dt1$KC..Theoretical.Levels.),FUN=mean)
dt1<-dt1[,c(1,2,5,6)]
colnames(dt1)<-c('StudentId','TheoLevel','Duration','Correct')
aggdata<-dt1[with(dt1,order(StudentId,TheoLevel)),]
#change data form and replace missing data with column means
student_theolevel<-reshape(aggdata, idvar = "StudentId", timevar = "TheoLevel", direction = "wide")
for(i in 1:ncol(student_theolevel)){
student_theolevel[is.na(student_theolevel[,i]), i] <- mean(student_theolevel[,i], na.rm = TRUE)}
#clustering
mydata<-student_theolevel[,c(2:9)]
mydata<-scale(mydata)
d <- dist(mydata, method = "euclidean") # distance matrix
fit <- hclust(d, method="ward.D2")
plot(fit) # display dendogram
rect.hclust(fit, k=4, border='red')
group4 <- cutree(fit, k=4)
student_theolevel<-cbind(student_theolevel,group4)
